version: '3.8'

services:
  api_gateway:
    build:
      context: ./message-backend
      dockerfile: apiGateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user
      - message

  user:
    build:
      context: ./message-backend
      dockerfile: user/Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - user-db
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  message:
    build:
      context: ./message-backend
      dockerfile: message/Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - message-db
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  user-db:
    build:
      context: ./databases/user
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_db

  message-db:
    build:
      context: ./databases/message
      dockerfile: Dockerfile
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: message_db

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-id
